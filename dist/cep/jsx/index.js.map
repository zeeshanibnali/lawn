{"version":3,"file":"index.js","sources":["../../../cep.config.ts","../../../src/shared/shared.ts","../../../src/jsx/utils/samples.ts","../../../src/jsx/aeft/aeft.ts","../../../src/jsx/ilst/ilst.ts","../../../src/jsx/anim/anim.ts","../../../src/jsx/ppro/ppro.ts","../../../src/jsx/phxs/phxs.ts","../../../src/jsx/index.ts"],"sourcesContent":["import { CEP_Config } from \"vite-cep-plugin\";\r\nimport { version } from \"./package.json\";\r\n\r\n\r\nconst config: CEP_Config = {\r\n  version,\r\n  id: \"com.lawn.cep\",\r\n  displayName: \"Lawn\",\r\n  symlink: \"local\",\r\n  port: 3000,\r\n  servePort: 5000,\r\n  startingDebugPort: 8860,\r\n  extensionManifestVersion: 6.0,\r\n  requiredRuntimeVersion: 9.0,\r\n  hosts: [\r\n    {\r\n      name: \"AEFT\",\r\n      version: \"[0.0,99.9]\",\r\n    },\r\n    {\r\n      name: \"PPRO\",\r\n      version: \"[0.0,99.9]\",\r\n    },\r\n    {\r\n      name: \"ILST\",\r\n      version: \"[0.0,99.9]\",\r\n    },\r\n    {\r\n      name: \"PHXS\",\r\n      version: \"[0.0,99.9]\",\r\n    },\r\n    {\r\n      name: \"FLPR\",\r\n      version: \"[0.0,99.9]\",\r\n    },\r\n  ],\r\n\r\n  type: \"Panel\",\r\n  iconDarkNormal: \"./src/assets/light-icon.png\",\r\n  iconNormal: \"./src/assets/dark-icon.png\",\r\n  iconDarkNormalRollOver: \"./src/assets/light-icon.png\",\r\n  iconNormalRollOver: \"./src/assets/dark-icon.png\",\r\n  parameters: [\"--v=0\", \"--enable-nodejs\", \"--mixed-context\"],\r\n  width: 500,\r\n  height: 550,\r\n\r\n  panels: [\r\n    {\r\n      mainPath: \"./main/index.html\",\r\n      name: \"main\",\r\n      panelDisplayName: \"Lawn\",\r\n      autoVisible: true,\r\n      width: 600,\r\n      height: 650,\r\n    },\r\n  ],\r\n  build: {\r\n    jsxBin: \"off\",\r\n    sourceMap: true,\r\n  },\r\n  zxp: {\r\n    country: \"US\",\r\n    province: \"CA\",\r\n    org: \"MyCompany\",\r\n    password: \"mypassword\",\r\n    tsa: \"http://timestamp.digicert.com/\",\r\n    sourceMap: false,\r\n    jsxBin: \"off\",\r\n  },\r\n  installModules: [],\r\n  copyAssets: [],\r\n  copyZipAssets: [],\r\n};\r\nexport default config;\r\n","import config from \"../../cep.config\";\r\nexport const ns = config.id;\r\n","export const helloVoid = (): void => {\r\n  alert(\"test\");\r\n};\r\nexport const helloError = (str: string) => {\r\n  // Intentional Error for Error Handling Demonstration\r\n  //@ts-ignore\r\n  str = strr;\r\n};\r\n\r\nexport const helloStr = (str: string) => {\r\n  alert(`ExtendScript received a string: ${str}`);\r\n  return str;\r\n};\r\nexport const helloNum = (n: number) => {\r\n  alert(`ExtendScript received a number: ${n.toString()}`);\r\n  return n;\r\n};\r\nexport const helloArrayStr = (arr: string[]) => {\r\n  alert(\r\n    `ExtendScript received an array of ${arr.length} strings: ${arr.toString()}`\r\n  );\r\n  return arr;\r\n};\r\nexport const helloObj = (obj: { height: number; width: number }) => {\r\n  alert(`ExtendScript received an object: ${JSON.stringify(obj)}`);\r\n  return {\r\n    y: obj.height,\r\n    x: obj.width,\r\n  };\r\n};\r\n","import {\r\n  helloVoid,\r\n  helloError,\r\n  helloStr,\r\n  helloNum,\r\n  helloArrayStr,\r\n  helloObj,\r\n} from \"../utils/samples\";\r\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj, helloVoid };\r\n\r\nexport const helloWorld = () => {\r\n  alert(\"Hello from After Effects!\");\r\n  app.project.activeItem;\r\n};\r\n","import {\r\n  helloVoid,\r\n  helloError,\r\n  helloStr,\r\n  helloNum,\r\n  helloArrayStr,\r\n  helloObj,\r\n} from \"../utils/samples\";\r\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj, helloVoid };\r\n\r\nexport const helloWorld = () => {\r\n  alert(\"Hello from Illustrator\");\r\n  app.activeDocument.path;\r\n};\r\n","export const helloWorld = () => {\r\n  alert(\"Hello from Animate\");\r\n  document.path;\r\n};\r\n","import {\r\n  helloVoid,\r\n  helloError,\r\n  helloStr,\r\n  helloNum,\r\n  helloArrayStr,\r\n  helloObj,\r\n} from \"../utils/samples\";\r\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj, helloVoid };\r\n\r\nexport const qeDomFunction = () => {\r\n  if (typeof qe === \"undefined\") {\r\n    app.enableQE();\r\n  }\r\n  if (qe) {\r\n    qe.name;\r\n    qe.project.getVideoEffectByName(\"test\");\r\n  }\r\n};\r\n\r\nexport const helloWorld = () => {\r\n  alert(\"Hello from Premiere Pro.\");\r\n};\r\n","import {\r\n  helloVoid,\r\n  helloError,\r\n  helloStr,\r\n  helloNum,\r\n  helloArrayStr,\r\n  helloObj,\r\n} from \"../utils/samples\";\r\nexport { helloError, helloStr, helloNum, helloArrayStr, helloObj, helloVoid };\r\n\r\nexport const helloWorld = () => {\r\n  app.activeDocument;\r\n  alert(\"Hello from Photoshop\");\r\n};\r\n","// @include './lib/json2.js'\r\n\r\nimport { ns } from \"../shared/shared\";\r\n\r\nimport * as aeft from \"./aeft/aeft\";\r\nimport * as ilst from \"./ilst/ilst\";\r\nimport * as anim from \"./anim/anim\";\r\nimport * as ppro from \"./ppro/ppro\";\r\nimport * as phxs from \"./phxs/phxs\";\r\n\r\nlet main: any;\r\n\r\nswitch (BridgeTalk.appName) {\r\n  case \"premierepro\":\r\n  case \"premiereprobeta\":\r\n    main = ppro;\r\n    break;\r\n  case \"aftereffects\":\r\n  case \"aftereffectsbeta\":\r\n    main = aeft;\r\n    break;\r\n  case \"illustrator\":\r\n  case \"illustratorbeta\":\r\n    main = ilst;\r\n    break;\r\n  case \"photoshop\":\r\n  case \"photoshopbeta\":\r\n    main = phxs;\r\n    break;\r\n  default:\r\n    //@ts-ignore\r\n    if (app.appName === \"Adobe Animate\") {\r\n      main = anim;\r\n    }\r\n    break;\r\n}\r\n//@ts-ignore\r\nconst host = typeof $ !== \"undefined\" ? $ : window;\r\nhost[ns] = main;\r\n\r\nexport type Scripts = typeof aeft &\r\n  typeof ilst &\r\n  typeof anim &\r\n  typeof ppro &\r\n  typeof phxs;\r\n"],"names":["version","id","displayName","symlink","port","servePort","startingDebugPort","extensionManifestVersion","requiredRuntimeVersion","hosts","name","type","iconDarkNormal","iconNormal","iconDarkNormalRollOver","iconNormalRollOver","parameters","width","height","panels","mainPath","panelDisplayName","autoVisible","build","jsxBin","sourceMap","zxp","country","province","org","password","tsa","installModules","copyAssets","copyZipAssets","str","alert","qe","app","main","host"],"mappings":";;AAIA;AACEA;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AAEIC;AACAV;AACF;AAEEU;AACAV;AACF;AAEEU;AACAV;AACF;AAEEU;AACAV;AACF;AAEEU;AACAV;AACF;AAGFW;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AACAC;AAEAC;AAEIC;AACAV;AACAW;AACAC;AACAL;AACAC;AACF;AAEFK;AACEC;AACAC;;AAEFC;AACEC;AACAC;AACAC;AACAC;AACAC;AACAN;AACAD;;AAEFQ;AACAC;AACAC;AACF;;ACvEA;;ACDA;;AAEA;AACA;AACE;AACA;AACAC;AACF;AAEA;AACEC;AACA;AACF;AACA;;AAEE;AACF;AACA;AACEA;AAGA;AACF;AACA;;;;;;AAMA;;ACnBA;;;AAGA;;;;;;;;;;;;;ACHA;;;AAGA;;;;;;;;;;;;;ACbA;;AAGA;;;;;;;ACOA;AACE;;AAEA;AACA;AACEC;AACAA;AACF;AACF;AAEA;;AAEA;;;;;;;;;;;;;;ACZA;AACEC;;AAEF;;;;;;;;;;;;;ACHA;AAEA;AACE;AACA;AACEC;AACA;AACF;AACA;AACEA;AACA;AACF;AACA;AACEA;AACA;AACF;AACA;AACEA;AACA;AACF;AACE;AACA;AACEA;AACF;AACA;AACJ;AACA;AACA;AACAC"}